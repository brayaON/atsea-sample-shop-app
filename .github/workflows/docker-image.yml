name: Docker Image CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  docker_imgs:
  

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
    - name: Build the JavaApp Docker Image
      run: 
        docker build app/ --tag ${{secrets.DOCKER_USERNAME}}/java_app:latest --tag ${{secrets.DOCKER_USERNAME}}/java_app:${{ github.sha }} 
      
    - name: Push the JavaApp Docker Image
      run: 
        docker push --all-tags ${{secrets.DOCKER_USERNAME}}/java_app
      
    - name: Build the Database Docker Image
      run: 
        docker build database/ --tag ${{secrets.DOCKER_USERNAME}}/database:latest --tag ${{secrets.DOCKER_USERNAME}}/database:${{ github.sha }} 
      
    - name: Push the Database Docker Image
      run: 
        docker push --all-tags ${{secrets.DOCKER_USERNAME}}/database
        
    - name: Build the PaymentGateway Docker Image
      run: 
        docker build payment_gateway/ --tag ${{secrets.DOCKER_USERNAME}}/payment_gateway:latest --tag ${{secrets.DOCKER_USERNAME}}/payment_gateway:${{ github.sha }} 
      
    - name: Push the PaymentGateway Docker Image
      run: 
        docker push --all-tags ${{secrets.DOCKER_USERNAME}}/payment_gateway
        
    - name: Build the ReverseProxy Docker Image
      run: 
        docker build reverse_proxy/ --tag ${{secrets.DOCKER_USERNAME}}/reverse_proxy:latest --tag ${{secrets.DOCKER_USERNAME}}/reverse_proxy:${{ github.sha }} 
      
    - name: Push the ReverseProxy Docker Image
      run: 
        docker push --all-tags ${{secrets.DOCKER_USERNAME}}/reverse_proxy
  
  deploy:
  
    needs: docker_imgs
    
    name: Upload to AWS EC2
  
    runs-on: ubuntu-latest
    
    env:
      AWS_REGION: us-east-2

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
        
    - name: Check if the instance is running
      run: |
        aws ec2 describe-instance-status --instance-ids ${{ secrets.INSTANCE_ID }} --query 'InstanceStatuses[0].InstanceState.Name' > aws_output.out
        OUT=`cat aws_output.out | grep -w running | wc -l`;
        if [ $OUT -eq 0 ]; then aws ec2 start-instances --instance-ids  ${{ secrets.INSTANCE_ID }}; fi
        
    - name: Executing remote ssh commands using password
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.INSTANCE_PUBLIC_DNS }}
        username: ec2-user
        password: ${{ secrets.INSTANCE_PRIVATE_KEY }}
        script: | 
          whoami
        
    - name: Trigger end to end tests
      run: |
        curl --request POST \
        --url https://api.github.com/repos/brayaon/tests-atsea-app/dispatches \
        --header 'authorization: Bearer ${{ secrets.ACCESS_TOKEN }}' \
        --header 'Accept: application/vnd.github.v3+json' \
        --data '{
          "event_type": "deployed"
          }' \
        --fail
  
